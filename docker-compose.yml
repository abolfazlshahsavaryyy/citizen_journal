version: '3.9'

services:
  db:
    image: postgres:15
    restart: no
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5





  fastapi:
    build:
      context: ./backend/fastapi_backend/FakeNewsAI/fastapi_app
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    volumes:
      - ./backend/fastapi_backend/FakeNewsAI/fastapi_app:/app
    depends_on:
      - db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: no



  hate_speech_api:
    build:
      context: ./backend/fastapi_backend/HateSpeech/fast_api
    container_name: hate_speech_api
    ports:
      - "8002:8000"  # Expose to host
    restart: unless-stopped
    
  
  celery:
    build: ./backend
    container_name: celery_worker
    command: celery -A django_backend worker -l info
    volumes:
      - ./backend:/app
    depends_on:
      - web
      - rabbitmq

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"     # For Celery
      - "15672:15672"   # RabbitMQ management UI
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
  


  django:
    build:
      context: ./backend/django_backend
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend/django_backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: no



volumes:
  pgdata:
