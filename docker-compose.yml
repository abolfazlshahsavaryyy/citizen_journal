version: '3.9'

services:
  db:
    image: postgres:15
    restart: no
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5





  fastapi:
    build:
      context: ./backend/fastapi_backend/FakeNewsAI/fastapi_app
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    volumes:
      - ./backend/fastapi_backend/FakeNewsAI/fastapi_app:/app
    depends_on:
      - db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: no


    

  # django:
  #   build:
  #     context: ./backend/django_backend
  #     dockerfile: Dockerfile
  #   command: python manage.py runserver 0.0.0.0:8000
  #   volumes:
  #     - ./backend/django_backend:/app
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     - db
  #   environment:
  #     POSTGRES_DB: ${POSTGRES_DB}
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #   restart: no



volumes:
  pgdata:
